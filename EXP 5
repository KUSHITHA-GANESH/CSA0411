#include <stdio.h>

struct priority_scheduling {
    char process_name;
    int burst_time;
    int waiting_time;
    int turn_around_time;
    int priority;
};

int main() {
    int number_of_process;
    int total = 0;
    struct priority_scheduling temp_process;
    int ASCII_number = 65; // To assign process names A, B, C...
    int position;
    float average_waiting_time;
    float average_turnaround_time;

    printf("Enter the total number of processes: ");
    scanf("%d", &number_of_process);

    struct priority_scheduling process[number_of_process];

    printf("\nPlease enter the Burst Time and Priority of each process:\n");
    for (int i = 0; i < number_of_process; i++) {
        process[i].process_name = (char) ASCII_number;

        printf("\nEnter details of Process %c\n", process[i].process_name);
        printf("Enter the burst time: ");
        scanf("%d", &process[i].burst_time);
        printf("Enter the priority: ");
        scanf("%d", &process[i].priority);

        ASCII_number++;
    }

    // Sorting processes by priority (higher number = higher priority)
    for (int i = 0; i < number_of_process; i++) {
        position = i;
        for (int j = i + 1; j < number_of_process; j++) {
            if (process[j].priority > process[position].priority)
                position = j;
        }
        temp_process = process[i];
        process[i] = process[position];
        process[position] = temp_process;
    }

    // Waiting time for first process = 0
    process[0].waiting_time = 0;

    // Calculate waiting times
    for (int i = 1; i < number_of_process; i++) {
        process[i].waiting_time = 0;
        for (int j = 0; j < i; j++) {
            process[i].waiting_time += process[j].burst_time;
        }
        total += process[i].waiting_time;
    }

    average_waiting_time = (float) total / (float) number_of_process;
    total = 0;

    printf("\n\nProcess\t Burst Time\t Priority\t Waiting Time\t Turnaround Time\n");
    for (int i = 0; i < number_of_process; i++) {
        process[i].turn_around_time = process[i].burst_time + process[i].waiting_time;
        total += process[i].turn_around_time;

        printf("  %c\t     %d\t\t   %d\t\t    %d\t\t    %d\n",
               process[i].process_name,
               process[i].burst_time,
               process[i].priority,
               process[i].waiting_time,
               process[i].turn_around_time);
    }

    average_turnaround_time = (float) total / (float) number_of_process;

    printf("\nAverage Waiting Time: %.2f", average_waiting_time);
    printf("\nAverage Turnaround Time: %.2f\n", average_turnaround_time);

    return 0;
}

OUTPUT:
Enter the total number of processes: 3

Please enter the Burst Time and Priority of each process:

Enter details of Process A
Enter the burst time: 5
Enter the priority: 2

Enter details of Process B
Enter the burst time: 3
Enter the priority: 1

Enter details of Process C
Enter the burst time: 8
Enter the priority: 3


Process   Burst Time   Priority   Waiting Time   Turnaround Time
  C           8           3            0              8
  A           5           2            8              13
  B           3           1            13             16

Average Waiting Time: 7.00
Average Turnaround Time: 12.33
